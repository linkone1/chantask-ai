{"ast":null,"code":"var _jsxFileName = \"/home/linkan/chaintask-seedplanter/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"6e5d0d6cc29142e4b6540499c011dc47\"; // Use env file for security\nconst BASE_URL = \"https://api.aimlapi.com/v1/chat/completions\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(\"\"); // Stores user’s input\n  const [aiResponse, setAiResponse] = useState(\"\"); // Stores AI’s response\n  const [loading, setLoading] = useState(false); // Shows loading state\n\n  // Function to call AI API using Fetch\n  const fetchAIResponse = async () => {\n    if (!userInput.trim()) return; // Prevent empty input\n\n    setLoading(true);\n    setAiResponse(\"\"); // Reset AI response\n\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch(BASE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"mistralai/Mistral-7B-Instruct-v0.2\",\n          messages: [{\n            role: \"system\",\n            content: \"You are a helpful AI assistant.\"\n          }, {\n            role: \"user\",\n            content: userInput\n          }],\n          temperature: 0.7,\n          max_tokens: 256\n        })\n      });\n      const data = await response.json();\n      setAiResponse(((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"No response from AI.\");\n    } catch (error) {\n      console.error(\"API call error:\", error);\n      setAiResponse(\"Error fetching response.\");\n    }\n    setLoading(false);\n  };\n\n  // Handles form submission (Enter key or button click)\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchAIResponse();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Ask something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"AI:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }, this), \" \", aiResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fzo9Qs/+epKXvyjqPaPzN3biN38=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_KEY","BASE_URL","App","_s","userInput","setUserInput","aiResponse","setAiResponse","loading","setLoading","fetchAIResponse","trim","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","Authorization","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","data","json","choices","message","error","console","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/linkan/chaintask-seedplanter/src/components/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\n\nconst API_KEY = \"6e5d0d6cc29142e4b6540499c011dc47\"; // Use env file for security\nconst BASE_URL = \"https://api.aimlapi.com/v1/chat/completions\";\n\nfunction App() {\n  const [userInput, setUserInput] = useState(\"\"); // Stores user’s input\n  const [aiResponse, setAiResponse] = useState(\"\"); // Stores AI’s response\n  const [loading, setLoading] = useState(false); // Shows loading state\n\n  // Function to call AI API using Fetch\n  const fetchAIResponse = async () => {\n    if (!userInput.trim()) return; // Prevent empty input\n\n    setLoading(true);\n    setAiResponse(\"\"); // Reset AI response\n\n    try {\n      const response = await fetch(BASE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${API_KEY}`,\n        },\n        body: JSON.stringify({\n          model: \"mistralai/Mistral-7B-Instruct-v0.2\",\n          messages: [\n            { role: \"system\", content: \"You are a helpful AI assistant.\" },\n            { role: \"user\", content: userInput },\n          ],\n          temperature: 0.7,\n          max_tokens: 256,\n        }),\n      });\n\n      const data = await response.json();\n      setAiResponse(data.choices?.[0]?.message?.content || \"No response from AI.\");\n    } catch (error) {\n      console.error(\"API call error:\", error);\n      setAiResponse(\"Error fetching response.\");\n    }\n\n    setLoading(false);\n  };\n\n  // Handles form submission (Enter key or button click)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchAIResponse();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>AI Chat</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          placeholder=\"Ask something...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      {loading ? <p>Loading...</p> : <p><strong>AI:</strong> {aiResponse}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}